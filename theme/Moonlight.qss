/*=============================================*/
/*                                             */
/*      OBS Moonlight Theme by WyzzyMoon       */
/*     Copyright (C) 2021 by Wikke Andeweg     */
/*          https://wikkeandeweg.nl            */
/*       https://deviantart.com/wyzzymoon      */
/*        https://github.com/WyzzyMoon/        */
/*                                             */
/* =========================================== */


/* Colors */

/* rgb(225,225,225); /* MLveryLight */
/* rgb(200,200,200); /* MLlighter */
/* rgb(101,101,101); /* MLlight */
/* rgb(71,71,71); /* MLkindaDark */
/* rgb(31,31,31); /* MLdark */
/* rgb(21,21,21); /* MLveryDark */
/* rgb(11,11,11); /* MLveryVeryDark */


/* Custom theme information.  This will set the application's QPalette, as
 * well as pass to QML via the OBSTheme object.
 * Can also use OBSTheme::disabled, OBSTheme::active, and OBSTheme::inactive.
 * Using it without will set all three (making 'active' a bit redundant) */
OBSTheme {
    window: rgb(31,31,31); /* MLdark */
    windowText: rgb(225,225,225); /* MLveryLight */
    base: rgb(21,21,21); /* MLveryDark */
    alternateBase: rgb(11,11,11); /* MLveryVeryDark */
    text: rgb(225,225,225); /* MLveryLight */
    button: rgb(71,71,71); /* MLkindaDark */
    buttonText: rgb(225,225,225); /* MLveryLight */
    brightText: rgb(200,200,200); /* MLlighter */

    light: rgb(71,71,71); /* MLkindaDark */
    mid: rgb(31,31,31); /* MLdark */
    dark: rgb(21,21,21); /* MLveryDark */
    shadow: rgb(11,11,11); /* MLveryVeryDark */

    highlight: rgb(255,255,255);
    highlightText: rgb(0,0,0);

    link: rgb(120, 31, 89);
    linkVisited: rgb(250, 233, 218);
}

OBSTheme::disabled {
    text: rgb(101,101,101); /* MLlight */
    buttonText: rgb(101,101,101); /* MLlight */
    brightText: rgb(101,101,101); /* MLlight */
}

OBSTheme::inactive {
    highlight: rgb(48,47,48);
    highlightText: rgb(255, 255, 255);
}


/* General style, we override only what is needed. */
QWidget {
    background-color: rgb(31,31,31); /* MLdark */
    alternate-background-color: rgb(21,21,21); /* MLveryDark */
    color: rgb(225,225,225); /* MLveryLight */
    selection-background-color: rgb(42,130,218); /* blue */
    selection-color: black;
    font-size: 12px;
}

* [frameShape="1"], * [frameShape="2"], * [frameShape="3"], * [frameShape="4"], * [frameShape="5"], * [frameShape="6"] {
    border: 0px solid rgb(221,221,221);
}


/* Misc */

QWidget::disabled {
    color: 2px solid rgb(200,200,200); /* MLlighter */
}

QAbstractItemView, QStackedWidget#stackedMixerArea QWidget {
    background-color: rgb(21,21,21); /* MLveryDark */
}

QToolTip {
    background-color: rgb(21,21,21); /* MLveryDark */
    color: rgb(205,205,205);
    border: none;
}

QMenuBar::item {
    background-color: rgb(31,31,31); /* MLdark */
}

QListWidget::item:selected:!active,
SourceTree::item:selected:!active {
    color: rgb(255, 255, 255);
    background-color: rgb(48,47,48);
}

QListWidget QLineEdit,
SourceTree QLineEdit {
    padding-top: 0px;
    padding-bottom: 0px;
    padding-right: 0;
    padding-left: 2px;
    border: none;
    border-radius: none;
}

/* Dock Widget */

QDockWidget {
	titlebar-close-icon: url('./theme/Moonlight/close.svg');
	titlebar-normal-icon: url('./theme/Moonlight/popout.svg');
  border: 1px solid white;
  text-transform: uppercase;
  font-weight: bold;
  font-size: 10px;

}

QDockWidget::title {
    text-align: left;
    font-weight: bold;
    border-bottom: 2px solid #2f2f2f;
    background-color: rgba(21,21,21,0);

}

QDockWidget::close-button, QDockWidget::float-button {
    border: 1px solid transparent;
    background: transparent;
    padding: 0px;
}

QDockWidget::close-button:hover, QDockWidget::float-button:hover {
    background: transparent;
}

QDockWidget::close-button:pressed, QDockWidget::float-button:pressed {
    padding: 1px -1px -1px 1px;
}

/* Group Box */

QGroupBox {
    border-bottom: 1px solid #2f2f2f;
    border-radius: 1px;
    padding-top: 24px;
    font-weight: bold;
    text-transform: uppercase;
    font-size: 10px;

}

QGroupBox::title {
    text-align: center;
    subcontrol-origin: margin;
    top: 1;
    left: 10;
}


/* ScrollBars */

::corner {
    background-color: rgb(31,31,31); /* MLdark */
    border: none;
}

QScrollBar:vertical {
    background-color: rgb(31,31,31); /* MLdark */
    width: 7px;
    margin: 0px;
}

QScrollBar::handle:vertical {
    background-color: rgb(71,71,71); /* MLkindaDark */
    min-height: 10px;
    margin: 2px;
    border-width: 1px;
    border: 1px solid rgb(71,71,71); /* MLkindaDark */
}

QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {
    border: none;
    background: none;
    height: 0px;
}

QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical, QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
    border: none;
    background: none;
    color: none;
}

QScrollBar:horizontal {
    background-color: rgb(31,31,31); /* MLdark */
    height: 7px;
    margin: 0px;
}

QScrollBar::handle:horizontal {
    background-color: rgb(71,71,71); /* MLkindaDark */
    min-width: 10px;
    margin: 2px;
    border-radius: 5px;
    border-width: 1px;
    border: 1px solid rgb(71,71,71); /* MLkindaDark */
}

QScrollBar::add-line:horizontal, QScrollBar::sub-line:horizontal {
    border: none;
    background: none;
    width: 0px;
}

QScrollBar::left-arrow:horizontal, QScrollBar::right-arrow:horizontal, QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {
    border: none;
    background: none;
    color: none;
}

/* Source Context */
#contextContainer QPushButton[themeID2=contextBarButton] {
    padding: 3px;
    margin: 0px;
}

#contextContainer QPushButton#sourcePropertiesButton {
    qproperty-icon: url(./theme/Moonlight/settings/general.svg);
}

#contextContainer QPushButton#sourceFiltersButton {
    qproperty-icon: url(./theme/Moonlight/filter.svg);
}

/* Scenes and Sources toolbar */

QToolBar {
    background-color: rgb(31,31,31); /* MLveryDark */
    border: none;
}

QToolButton:hover {
background-color: rgb(41,41,41);
    border-radius: none;
}

QToolButton:pressed {
background-color: rgb(21,21,21);
    border-radius: none;
}

* [themeID="addIconSmall"] {
    qproperty-icon: url(./theme/Moonlight/plus.svg);
}

* [themeID="removeIconSmall"] {
    qproperty-icon: url(./theme/Moonlight/minus.svg);
}

* [themeID="propertiesIconSmall"] {
    qproperty-icon: url(./theme/Moonlight/settings/general.svg);
}

* [themeID="configIconSmall"] {
    qproperty-icon: url(./theme/Moonlight/settings/general.svg);
}

* [themeID="refreshIconSmall"] {
    qproperty-icon: url(./theme/Moonlight/refresh.svg);
}

* [themeID="upArrowIconSmall"] {
    qproperty-icon: url(./theme/Moonlight/up.svg);
}

* [themeID="downArrowIconSmall"] {
    qproperty-icon: url(./theme/Moonlight/down.svg);
}

* [themeID="pauseIconSmall"] {
    qproperty-icon: url(./theme/Moonlight/media-pause.svg);
}


/* Tab Widget */

QTabWidget::pane { /* The tab widget frame */
    border-top: 1px solid rgb(21,21,21); /* MLveryDark */
}

QTabWidget::tab-bar {
    alignment: left;
}

QTabBar::tab {
    background-color: rgb(31,31,31); /* MLveryDark */
    border-bottom: 1px solid rgb(71,71,71);
    padding: 5px;
    margin: 1px;
    font-weight: bold;
    text-transform: uppercase;
    font-size: 10px;
}

QTabBar::tab:top {
    border-bottom: 1px transparent;
    border-top-left-radius: 0px;
    border-top-right-radius: 0px;
    min-width: 130px;

}

QTabBar::tab:bottom {
    padding-top: 4px;
    margin-bottom: 4px;
    border-bottom-left-radius: 0px;
    border-bottom-right-radius: 0px;
    height: 10px;
    min-width: 130px;
}

QTabBar::tab:selected {
    background-color: rgb(21,21,21); /* MLkindaDark */
    border-bottom: 2px solid rgb(121,121,121);

}

QTabBar::tab:hover {
    background-color: rgb(71,71,71);
    color: white;
}

QTabBar::tab:pressed {
    background-color: rgb(21,21,21); /* MLveryDark */
}


/* ComboBox */

QComboBox {
    background-color: rgb(21,21,21);
    border-style: solid;
    border: 0px;
    border-radius: 0px;
    border-color: rgb(76,76,76); /* veryDark */
    padding: 2px;
    padding-left: 10px;
}

QComboBox:hover {
    background-color: rgb(71,71,71);
}

QComboBox::drop-down {
    border:none;
    border-left: 5px solid rgba(31,31,31,255); /* veryDark */
    width: 20px;
}

QComboBox::down-arrow {
    qproperty-alignment: AlignTop;
    image: url(./theme/Moonlight/updown.svg);
    width: 100%;
}

QComboBox:on {
    background-color: rgb(71,71,71); /* MLveryDark */
}

QComboBox:editable {
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
}

QComboBox::drop-down:editable {
    border-top-right-radius: 0px;
    border-bottom-right-radius: 0px;
}

QComboBox::down-arrow:editable {
    qproperty-alignment: AlignTop;
    image: url(./theme/Moonlight/down.svg);
    width: 8%;
}


/* Textedits etc */

QLineEdit, QTextEdit, QPlainTextEdit {
    background-color: rgb(21,21,21); /* MLveryDark */
    border: none;
    border-radius: 0px;
    padding: 2px 2px 3px 7px;
}

/* Spinbox and doubleSpinbox */

QSpinBox, QDoubleSpinBox {
    background-color: rgb(21,21,21); /* MLveryDark */
    border: none;
    border-radius: 0px;
    margin: 0px 3px 0px 0px;
    padding: 2px 2px 3px 2px;
}

QSpinBox::up-button, QDoubleSpinBox::up-button {
    subcontrol-origin: margin;
    subcontrol-position: top right; /* position at the top right corner */
    width: 20px;
    background-color: rgb(21,21,21); /* MLveryDark */
    border-left: 5px solid rgba(31,31,31,255); /* veryDark */
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border-bottom-width: 0;
}

QSpinBox::down-button, QDoubleSpinBox::down-button {
    subcontrol-origin: margin;
    subcontrol-position: bottom right; /* position at the top right corner */
    width: 20px;
    background-color: rgb(21,21,21); /* MLveryDark */
    border-left: 5px solid rgba(31,31,31,255); /* veryDark */
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-top-width: 0;
}

QSpinBox::up-button:hover, QSpinBox::down-button:hover, QDoubleSpinBox::up-button:hover, QDoubleSpinBox::down-button:hover {
    background-color: rgb(101,101,101); /* MLlight */
}

QSpinBox::up-button:pressed, QSpinBox::down-button:pressed, QDoubleSpinBox::up-button:pressed, QDoubleSpinBox::down-button:pressed {
    background-color: rgb(31,31,31); /* MLdark */
}

QSpinBox::up-button:disabled, QSpinBox::up-button:off, QSpinBox::down-button:disabled, QSpinBox::down-button:off {
    background-color: rgb(31,31,31); /* MLdark */
}

QDoubleSpinBox::up-button:disabled, QDoubleSpinBox::up-button:off, QDoubleSpinBox::down-button:disabled, QDoubleSpinBox::down-button:off {
    background-color: rgb(31,31,31); /* MLdark */
}

QSpinBox::up-arrow, QDoubleSpinBox::up-arrow {
    image: url(./theme/Moonlight/up.svg);
    width: 100%;
}

QSpinBox::down-arrow, QDoubleSpinBox::down-arrow {
    image: url(./theme/Moonlight/down.svg);
    width: 100%;
}


/* Buttons */

QPushButton {
    color: rgb(225,225,225); /* MLveryLight */
    background-color: rgb(41,41,41);
    border: 0px solid rgb(71,71,71);
    padding: 4px;
    padding-left: 20px;
    padding-right: 20px;
    text-transform: uppercase;
    font-size: 10px;
}

QPushButton::flat {
    background-color: rgba(41,41,41,0); /* MLdark */
    text-transform: uppercase;
    font-size: 8px;
}
QPushButton::flat:hover {
    background-color: rgba(41,41,41,0); /* MLdark */
    text-transform: uppercase;
    font-size: 8px;
    color: white
}

QPushButton:hover {
    background-color: rgb(71,71,71);
    color: white
}

QPushButton:pressed {
    background-color: rgb(21,21,21); /* MLveryDark */
}

QPushButton:checked {
    background-color: rgb(21,21,21); /* MLkindaDark */
    border-bottom: 2px solid rgb(121,121,121);
}

QPushButton::menu-indicator {
    image: url(./theme/Moonlight/down.svg);
    subcontrol-position: right;
    subcontrol-origin: padding;
    width: 25px;
}

/* Sliders */

QSlider::groove:horizontal {
    background-color: rgb(121,121,121);
    height: 1px;
    border: none;
    border-radius: 0px;
}

QSlider::handle:horizontal {
    background-color: rgb(71,71,71);
    border: 1px solid rgb(221,221,221);
    border-radius: 0px;
    height: 10px;
    width: 13px;
    margin: -3px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
}

QSlider::handle:horizontal:pressed {
    background-color: rgb(221,221,221);
}

QSlider::sub-page:horizontal {
    background-color: rgb(255,255,255);
    border: 2px solid white;
    border-radius: 0px;
}

QSlider::sub-page:horizontal:disabled {
    background-color: rgb(50, 49, 50); /* dark */
    border-radius: 2px;
}

QSlider::groove:vertical {
    background-color: rgb(121,121,121);
    width: 1px;
    border: none;
    border-radius: 0px;
}

QSlider::handle:vertical {
    background-color: rgb(71,71,71);
    border: 1px solid rgb(221,221,221);
    border-radius: 0px;
    width: 10px;
    height: 13px;
    margin: 0 -3px; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
}

QSlider::handle:vertical:pressed {
    background-color: rgb(221,221,221);
}

QSlider::add-page:vertical {
    background-color: rgb(255,255,255);
    border: 2px solid white;
    border-radius: 0px;
}

QSlider::add-page:vertical:disabled {
    background-color: rgb(50, 49, 50); /* dark */
    border-radius: 1px;
}

QSlider::handle:hover {
    background-color: rgb(200,199,200); /* veryLight */
}

QSlider::handle:disabled {
    background-color: rgb(101,101,101); /* MLlight */
}

/* Volume Control */


VolumeMeter {
    qproperty-backgroundNominalColor: rgb(64, 9, 34);
    qproperty-backgroundWarningColor: rgb(104, 29, 27);
    qproperty-backgroundErrorColor: rgb(121, 107, 97);
    qproperty-foregroundNominalColor: rgb(166, 25, 90);
    qproperty-foregroundWarningColor: rgb(235, 72, 62);
    qproperty-foregroundErrorColor: rgb(249, 221, 201);
    qproperty-magnitudeColor: rgb(0, 0, 0);
    qproperty-majorTickColor: rgb(225,225,225); /* MLveryLight */
    qproperty-minorTickColor: rgb(101,101,101); /* MLlight */
}

/* Status Bar */

QStatusBar::item {
    border: none;
}

/* Table View */

QTableView {
    gridline-color: rgb(71,71,71); /* MLkindaDark */
}

QHeaderView::section {
    background-color: rgb(31,31,31); /* MLdark */
    color: rgb(225,225,225); /* MLveryLight */
    border: 1px solid rgb(21,21,21); /* MLveryDark */;
    border-radius: 5px;
}

/* Mute CheckBox */

MuteCheckBox {
    outline: none;
}

MuteCheckBox::indicator:checked {
    image: url(./theme/Moonlight/mute.svg);
}

MuteCheckBox::indicator:unchecked {
    image: url(./theme/Moonlight/settings/audio.svg);
}

OBSHotkeyLabel[hotkeyPairHover=true] {
    color: red;
}

/* Pause */
PauseCheckBox {
    outline: none;
}

PauseCheckBox::indicator:checked {
    image: url(:/res/images/media-pause.svg);
}

PauseCheckBox::indicator:unchecked {
    image: url(:/res/images/media-play.svg);
}

/* Group Collapse Checkbox */

SourceTreeSubItemCheckBox {
    background: transparent;
    outline: none;
}

SourceTreeSubItemCheckBox::indicator {
    width: 10px;
    height: 10px;
}

SourceTreeSubItemCheckBox::indicator:checked {
    image: url(./theme/Moonlight/expand.svg);
}

SourceTreeSubItemCheckBox::indicator:unchecked {
    image: url(./theme/Moonlight/down.svg);
}


/* Label warning/error */

QLabel#warningLabel {
    color: rgb(192, 128, 0);
    font-weight: bold;
}

QLabel#errorLabel {
    color: rgb(192, 0, 0);
    font-weight: bold;
}

* [themeID="warning"] {
    color: rgb(192, 128, 0);
    font-weight: bold;
}

* [themeID="error"] {
    color: rgb(192, 0, 0);
    font-weight: bold;
}

* [themeID="good"] {
    color: rgb(0, 192, 0);
    font-weight: bold;
}

/* About dialog */

* [themeID="aboutName"] {
    font-size: 20px;
    font-weight: bold;
    text-transform: uppercase;
}

* [themeID="aboutVersion"] {
    font-size: 12px;
    margin-bottom: 20px;
}

* [themeID="aboutInfo"] {
    margin-bottom: 20px;
}

* [themeID="aboutHLayout"] {
    background-color: rgb(31, 31, 31); /* veryDark */
}

/* Preview background color */

OBSQTDisplay {
	qproperty-displayBackgroundColor: rgb(31, 31, 31);
}

/* Preview/Program labels */

* [themeID="previewProgramLabels"] {
    font-size: 15px;
    margin-top:10px;
    border-bottom: 2px solid rgb(71,71,71);
    font-weight: 500;
    text-transform: uppercase;
    color: rgb(210,210,210);
}

/* Settings Icons */

OBSBasicSettings {
    qproperty-generalIcon: url(./theme/Moonlight/settings/general.svg);
    qproperty-streamIcon: url(./theme/Moonlight/settings/stream.svg);
    qproperty-outputIcon: url(./theme/Moonlight/settings/output.svg);
    qproperty-audioIcon: url(./theme/Moonlight/settings/audio.svg);
    qproperty-videoIcon: url(./theme/Moonlight/settings/video.svg);
    qproperty-hotkeysIcon: url(./theme/Moonlight/settings/hotkeys.svg);
    qproperty-advancedIcon: url(./theme/Moonlight/settings/advanced.svg);

}

OBSBasicSettings QListWidget::item {
    padding-top: 3px;
    padding-bottom: 3px;
}

/* Locked CheckBox */

LockedCheckBox {
    outline: none;
    background: transparent;
}

LockedCheckBox::indicator:checked {
    image: url(./theme/Moonlight/locked.svg);
}

LockedCheckBox::indicator:unchecked {
    image: url(:res/images/unlocked.svg);
}

/* Visibility CheckBox */

VisibilityCheckBox {
    outline: none;
    background: transparent;
}

VisibilityCheckBox::indicator:checked {
    image: url(./theme/Moonlight/visible.svg);
}

VisibilityCheckBox::indicator:unchecked {
    image: url(./theme/Moonlight/invisible.svg);
}

* [themeID="trashIcon"] {
    qproperty-icon: url(./theme/Moonlight/trash.svg);
}

* [themeID="revertIcon"] {
    qproperty-icon: url(./theme/Moonlight/revert.svg);
}

QPushButton#extraPanelDelete {
    background-color: rgb(31, 30, 31);
}

QPushButton#extraPanelDelete:hover {
    background-color: rgb(122,121,122);
}

QPushButton#extraPanelDelete:pressed {
    background-color: rgb(31,30,31);
}

/* Source Icons */

OBSBasic {
    qproperty-imageIcon: url(./theme/Moonlight/sources/image.svg);
    qproperty-colorIcon: url(./theme/Moonlight/sources/brush.svg);
    qproperty-slideshowIcon: url(./theme/Moonlight/sources/slideshow.svg);
    qproperty-audioInputIcon: url(./theme/Moonlight/sources/microphone.svg);
    qproperty-audioOutputIcon: url(./theme/Moonlight/settings/audio.svg);
    qproperty-desktopCapIcon: url(./theme/Moonlight/settings/video.svg);
    qproperty-windowCapIcon: url(./theme/Moonlight/sources/window.svg);
    qproperty-gameCapIcon: url(./theme/Moonlight/sources/gamepad.svg);
    qproperty-cameraIcon: url(./theme/Moonlight/sources/camera.svg);
    qproperty-textIcon: url(./theme/Moonlight/sources/text.svg);
    qproperty-mediaIcon: url(./theme/Moonlight/sources/media.svg);
    qproperty-browserIcon: url(./theme/Moonlight/sources/globe.svg);
    qproperty-groupIcon: url(./theme/Moonlight/sources/group.svg);
    qproperty-sceneIcon: url(./theme/Moonlight/sources/scene.svg);
    qproperty-defaultIcon: url(./theme/Moonlight/sources/default.svg);
}

/* Scene Tree */

SceneTree {
    qproperty-gridItemWidth: 150;
	qproperty-gridItemHeight: 27;
}

*[gridMode="true"] SceneTree::item {
    color: rgb(225,225,225); /* MLveryLight */
    background-color: rgb(76,76,76);
    border: none;
    border-radius: 3px;
    padding: 4px;
	padding-left: 10px;
	padding-right: 10px;
	margin: 1px;
}

*[gridMode="true"] SceneTree::item:selected {
    background-color: rgb(101,101,101); /* MLlight */
}

*[gridMode="true"] SceneTree::item:hover {
    background-color: rgb(101,101,101); /* MLlight */
}

*[gridMode="true"] SceneTree::item:pressed {
    background-color: rgb(21,21,21); /* MLveryDark */
}

*[gridMode="true"] SceneTree::item:checked {
    background-color: rgb(101,101,101); /* MLlight */
}

/* Save icon */

* [themeID="replayIconSmall"] {
    qproperty-icon: url(./theme/Moonlight/save.svg);
}

/* Studio Mode T-Bar */

QSlider[themeID="tBarSlider"] {
	height: 24px;
}

QSlider::groove:horizontal[themeID="tBarSlider"] {
	border: 0px solid #4c4c4c;
	height: 3px;
	background: rgb(121,121,121);
}

QSlider::sub-page:horizontal[themeID="tBarSlider"] {
	background: rgb(31,30,31);;
	border: 1px solid #4c4c4c;
}

QSlider::handle:horizontal[themeID="tBarSlider"] {
	background-color: rgb(71,71,71);
  border: 1px solid rgb(121,121,121);
	width: 8px;
	height: 20px;
	margin: -24px 0px;
}

/* Media icons */

* [themeID="playIcon"] {
    qproperty-icon: url(./theme/Moonlight/media/media_play.svg);
}

* [themeID="pauseIcon"] {
    qproperty-icon: url(./theme/Moonlight/media/media_pause.svg);
}

* [themeID="restartIcon"] {
    qproperty-icon: url(./theme/Moonlight/media/media_restart.svg);
}

* [themeID="stopIcon"] {
    qproperty-icon: url(./theme/Moonlight/media/media_stop.svg);
}

* [themeID="nextIcon"] {
    qproperty-icon: url(./theme/Moonlight/media/media_next.svg);
}

* [themeID="previousIcon"] {
    qproperty-icon: url(./theme/Moonlight/media/media_previous.svg);
}


QTextEdit {
    font-size: 18px;
}